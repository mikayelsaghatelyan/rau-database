"""create_tables

Revision ID: 1061ecca2c2b
Revises: 
Create Date: 2023-12-13 13:42:40.737664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1061ecca2c2b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
                    sa.Column('book_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('title', sa.String(length=100), nullable=True),
                    sa.Column('isbn', sa.String(length=50), nullable=True),
                    sa.Column('category', sa.String(length=50), nullable=True),
                    sa.Column('publisher', sa.String(length=50), nullable=True),
                    sa.Column('author_name', sa.String(length=50), nullable=True),
                    sa.Column('author_surname', sa.String(length=50), nullable=True),
                    sa.Column('misc_data ', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.PrimaryKeyConstraint('book_id'))
    op.create_index(op.f('ix_book_title'), 'book', ['title'], unique=False)
    op.create_table('patron',
                    sa.Column('patron_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('patron_name', sa.String(length=50), nullable=True),
                    sa.Column('patron_surname', sa.String(length=50), nullable=True),
                    sa.Column('phone_number', sa.String(length=50), nullable=True),
                    sa.Column('passport', sa.String(length=50), nullable=True),
                    sa.Column('address', sa.String(length=100), nullable=True),
                    sa.Column('departure', sa.Boolean(), nullable=True),
                    sa.Column('misc_data ', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.PrimaryKeyConstraint('patron_id'))
    op.create_index(op.f('ix_patron_passport'), 'patron', ['passport'], unique=False)
    op.create_table('checkout',
                    sa.Column('checkout_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('book_id', sa.Integer(), nullable=True),
                    sa.Column('patron_id', sa.Integer(), nullable=True),
                    sa.Column('checkout_date', sa.DateTime(), nullable=True),
                    sa.Column('return_date_expected', sa.DateTime(), nullable=True),
                    sa.Column('return_date_actual', sa.DateTime(), nullable=True),
                    sa.Column('misc_data ', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.ForeignKeyConstraint(['book_id'], ['book.book_id'], ),
                    sa.ForeignKeyConstraint(['patron_id'], ['patron.patron_id'], ),
                    sa.PrimaryKeyConstraint('checkout_id'))
    op.create_index(op.f('ix_checkout_checkout_id'), 'checkout', ['checkout_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_checkout_checkout_id'), table_name='checkout')
    op.drop_table('checkout')
    op.drop_index(op.f('ix_patron_passport'), table_name='patron')
    op.drop_table('patron')
    op.drop_index(op.f('ix_book_title'), table_name='book')
    op.drop_table('book')
    # ### end Alembic commands ###
